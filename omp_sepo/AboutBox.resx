<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>